namespace Glitch\Grammar;

use Glitch\Grammar\Tree\ActionNode;
use Glitch\Grammar\Tree\AssignmentNode;
use Glitch\Grammar\Tree\CallNode;
use Glitch\Grammar\Tree\EventDefinitionNode;
use Glitch\Grammar\Tree\EventListenerNode;
use Glitch\Grammar\Tree\FireNode;
use Glitch\Grammar\Tree\FunctionNode;
use Glitch\Grammar\Tree\ProgramNode;
use Glitch\Grammar\Tree\ReferenceNode;
use Glitch\Grammar\Tree\StringNode;

grammar GlitchFile extends GlitchExpression
{
    start Program = statements:StatementList _ { return new ProgramNode($statements); };
    
    DEF_EV = "*";
    ASSIGN = ":=";
    EV_OP = "+=" / "-=";
    FIRE = "!";

    Statement = DEF_EV _ names:IdentifierList _ ";" { return new EventDefinitionNode($names); }
              / left:Identifier _ ASSIGN _ right:Expression _ ";" { return new AssignmentNode($left, $right); }
              / left:Expression _ operator:EV_OP _ right:Expression _ ";" { return new EventListenerNode($left, $operator, $right); }
              / left:Expression _ FIRE _ right:ArgumentList _ ";" { return new FireNode($left, $right); };

    StatementList = (_ statement:Statement { return $statement; })*;
}

